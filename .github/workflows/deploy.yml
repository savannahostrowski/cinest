on:
    workflow_dispatch:
    push:
      # Run when commits are pushed to mainline branch (main or master)
      # Set this to the mainline branch you are using
      branches:
        - main
        - master
  
  # GitHub Actions workflow to deploy to Azure using azd
  # To configure required secrets for connecting to Azure, simply run `azd pipeline config`
  
  # Set up permissions for deploying with secretless Azure federated credentials
  # https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
  permissions:
    id-token: write
    contents: read
  
  jobs:
    build:
      runs-on: ubuntu-latest
      env:
        AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
        AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
        AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      steps:
        - name: Checkout
          uses: actions/checkout@v3
  
        - name: Install azd
          uses: Azure/setup-azd@v0.1.0
  
        - name: Install Go
          uses: actions/setup-go@v4
          with:
            go-version: '^1.20'
        - run: go version
  
        - name: Create filter to check if infra/ has changed
          uses: dorny/paths-filter@v2
          id: filter
          with:
            filters: |
              infra:
                - 'infra/**'
              appcode:
                - 'src/**'
  
        - name: Log in with Azure (Federated Credentials)
          if: ${{ env.AZURE_CLIENT_ID != '' }}
          run: |
            azd auth login `
              --client-id "$Env:AZURE_CLIENT_ID" `
              --federated-credential-provider "github" `
              --tenant-id "$Env:AZURE_TENANT_ID"
          shell: pwsh
  
        - name: Refresh the environment to grab values when re-provisioning is not needed
          if: steps.filter.outputs.infra == 'false'
          run: azd env refresh --no-prompt
          env:
            AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
            AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
            AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  
        - name: Provision Infrastructure, if infra/ has changed
          if: steps.filter.outputs.infra == 'true'
          run: azd provision --no-prompt
          env:
            AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
            AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
            AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
  
        - name: Deploy Application
          if: steps.filter.outputs.appcode == 'true'
          run: azd deploy --no-prompt
          env:
            AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
            AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
            AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}